

type Location{
  xPx: Int
  yPx: Int
  xTile: Int
  yTile: Int
}

input LocationInput{
  xPx: Int
  yPx: Int
  xTile: Int
  yTile: Int
}

input BombInput{
  _id: String
  placed: BigInt
  exploit: BigInt
  location: LocationInput
}

type Bomb{
  _id: String
  placed: BigInt
  exploit: BigInt
  location: Location
}

type Player {
  _id: String
  location: Location,
  name: String,
  image: String
  state: String
  code: String
  user_id: String
  character: Int
}

type LoginToGameResponse {
  code: String
  user_id: String
  character: Int
}

type Query {
  # "return Tags Array using paginator methods"
  getMessages(limit: Int): [String]
}

type Mutation{
  "Place a bomb"
  placeBomb(bomb: BombInput): Int
  loginToGame: LoginToGameResponse
}


type Subscription {
  "Listen bomb Placed on map by others players"
  listenPlacedBombs: [Bomb]

  "listen player game over"
  playerUpdates: Player
}